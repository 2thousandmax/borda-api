basePath: /api/v1
definitions:
  domain.Author:
    properties:
      contact:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  domain.ErrorResponse:
    properties:
      code:
        type: string
      detail:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  domain.PrivateUserProfileResponse:
    properties:
      contact:
        type: string
      id:
        type: integer
      team:
        $ref: '#/definitions/domain.TeamResponse'
      username:
        type: string
    type: object
  domain.PublicTaskResponse:
    properties:
      author:
        $ref: '#/definitions/domain.Author'
      category:
        type: string
      complexity:
        type: string
      description:
        type: string
      hint:
        type: string
      id:
        type: integer
      isSolved:
        type: boolean
      points:
        type: integer
      submissions:
        items:
          $ref: '#/definitions/domain.SubmissionResponse'
        type: array
      title:
        type: string
    type: object
  domain.PublicUserProfileResponse:
    properties:
      id:
        type: integer
      team:
        properties:
          id:
            type: integer
          name:
            type: string
        type: object
      username:
        type: string
    type: object
  domain.SignInInput:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  domain.SignInResponse:
    properties:
      token:
        type: string
    type: object
  domain.SignUpInput:
    properties:
      contact:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  domain.SubmissionResponse:
    properties:
      flag:
        type: string
      isCorrect:
        type: boolean
      timestamp:
        type: string
      username:
        type: string
    type: object
  domain.SubmitFlagRequest:
    properties:
      flag:
        type: string
    type: object
  domain.Task:
    properties:
      author:
        $ref: '#/definitions/domain.Author'
      category:
        type: string
      complexity:
        type: string
      description:
        type: string
      flag:
        type: string
      hint:
        type: string
      id:
        type: integer
      isActive:
        type: boolean
      isDisabled:
        type: boolean
      points:
        type: integer
      title:
        type: string
    type: object
  domain.TeamMember:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  domain.TeamResponse:
    properties:
      captain:
        $ref: '#/definitions/domain.TeamMember'
      id:
        type: integer
      members:
        items:
          $ref: '#/definitions/domain.TeamMember'
        type: array
      name:
        type: string
      token:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API for CTF Borda.
  title: CTF Borda API
  version: "0.1"
paths:
  /admin/tasks:
    get:
      description: Get all tasks with admin access.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Task'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all tasks
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Create new task.
      parameters:
      - description: Task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/domain.Task'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Task'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create new task
      tags:
      - Admin
  /admin/tasks/{task_id}:
    patch:
      consumes:
      - application/json
      description: Update task.
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      - description: Task
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/domain.Task'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update task
      tags:
      - Admin
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Sign in into account.
      parameters:
      - description: Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/domain.SignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SignInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Sign In
      tags:
      - Auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Create a new user.
      parameters:
      - description: Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/domain.SignUpInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      summary: Sign Up
      tags:
      - Auth
  /tasks:
    get:
      description: Get all tasks available for user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.PublicTaskResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get tasks
      tags:
      - Tasks
  /tasks/{task_id}/flag:
    post:
      consumes:
      - application/json
      description: Try to solve task by sending flag.
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      - description: Flag
        in: body
        name: flag
        required: true
        schema:
          $ref: '#/definitions/domain.SubmitFlagRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Submit flag
      tags:
      - Tasks
  /users:
    get:
      description: Show all registered users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.PublicUserProfileResponse'
            type: array
        "400":
          description: error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - Users
  /users/{user_id}:
    get:
      description: Show public user profile.
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.PublicUserProfileResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user
      tags:
      - Users
  /users/me:
    get:
      description: Show curently logged in user profile.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.PrivateUserProfileResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user profile
      tags:
      - Users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
